/* Copyright 2014 Stanford University and Los Alamos National Security, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task leaf_task(r: region<int>, x: int@r)
  : int
  , reads(r)
{
  return *x;
}

task make_partition(r: region<int>, i: int, j: int)
  : int
  , reads(r), writes(r)
{
  let x0 = new<int@r>();
  let x1 = new<int@r>();
  *x0 = i;
  *x1 = j;

  let c = color(color(coloring<r>(), x0, 0), x1, 1);
  let p = partition<r, disjoint>(c);

  var sum = 0;
  let is = ispace<int>(2);
  for i in is {
    let ri = p[i];
    for xi in ri {
      sum += leaf_task(ri, xi);
    }
  }
  return sum;
}

task main()
{
  let r = region<int>(2);
  assert make_partition(r, 3, 4) == 7;
}
