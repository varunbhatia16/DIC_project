/* Copyright 2014 Stanford University and Los Alamos National Security, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* From The Art of Computer Programming, Volume 2: Seminumerical
 * Algorithms, section 3.2.1.
 */
task random(bits: uint, rounds: int): uint
{
  assert rounds > 0;
  assert 1u <= bits && bits <= 32u;

  var seed = 1374614538u;
  while (rounds > 0) {
    seed = (seed * 0x5DEECE66Du + 0xBu) & ((1u << 48u) - 1u);
    rounds -= 1;
  }
  return (seed >> (48u - bits));
}

task main()
{
  assert random(16u, 1) == 52699u;
  assert random(16u, 2) == 36872u;
  assert random(16u, 3) == 5390u;
  assert random(16u, 4) == 27990u;
}
