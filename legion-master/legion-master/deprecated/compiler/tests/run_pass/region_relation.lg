/* Copyright 2014 Stanford University and Los Alamos National Security, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

struct foo<ra: region<foo<ra>>>[rb: region<foo<ra>>]
  , rb <= ra
{
  x: int,
  y: foo<ra>@rb,
}

task make_foo(ra: region<foo<ra>>, x: int)
  : foo<ra>@ra
  , reads(ra), writes(ra)
{
  let p = new<foo<ra>@ra>();
  unpack *p as s: foo<ra>[rb];
  *p = pack s{x: x, y: s.y} as foo<ra>[rb];
  return p;
}

task read_foo(ra: region<foo<ra>>, p: foo<ra>@ra)
  : int
  , reads(ra)
{
  unpack *p as s: foo<ra>[rb];
  return s.x;
}

task main()
{
  let r = region<foo<r>>(1);
  let p = make_foo(r, 1);
  assert read_foo(r, p) == 1;
}
