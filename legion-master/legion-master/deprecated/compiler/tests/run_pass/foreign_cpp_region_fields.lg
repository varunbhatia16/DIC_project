/* Copyright 2014 Stanford University and Los Alamos National Security, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import "foreign_cpp_region_fields.h";

struct point
{
  x: int,
  y: int,
  z: int,
}

task initialize(r: region<point>, x: point@r)
  , reads(r.{x, y, z})
  , writes(r.y)
{
  foreign_initialize(r, x);
}

task iterate(r: region<point>)
  , reads(r.x)
  , writes(r.{x, z})
  , reduces<+>(r.y)
{
  foreign_iterate(r);
}

task validate(r: region<point>, x: point@r)
  , reads(r)
{
  assert x->x == 10;
  assert x->y == 22;
  assert x->z == 30;
}

task main()
{
  let r = region<point>(5);
  let x = new<point@r>();
  initialize(r, x);
  iterate(r);
  validate(r, x);
}
