/* Copyright 2014 Stanford University and Los Alamos National Security, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

struct foo
{
  x: int,
  y: int,
  z: int,
}

struct bar
{
  a: foo,
  b: int,
  c: foo,
}

task make_bar(r: region<bar>, q: int, s: int, t: int)
  : bar@r
  , reads(r), writes(r)
{
  let p = new<bar@r>();
  *p = (*p){a: {x: q, y: s, z: t},
            b: s,
            c: p->c{x: q, y: s, z: t}};
  return p;
}

task read_bar(r: region<bar>, p: bar@r)
  : int
  , reads(r)
{
  let y = (*p).a.x + p->b * p->c.z;
  return y + 15;
}

task write_bar(r: region<bar>, p: bar@r)
  , writes(r)
{
  p->a.x = 2;
  p->b = 3;
  (*p).c.z = 4;
}

task main()
{
  let r = region<bar>(1);
  let p = make_bar(r, 1, 2, 3);
  assert read_bar(r, p) == 22;
  write_bar(r, p);
  assert read_bar(r, p) == 29;
}
