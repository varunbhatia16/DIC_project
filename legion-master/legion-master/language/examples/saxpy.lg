-- Copyright 2015 Stanford University
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

import "legion"

-- This is a hacky version of SAXPY written for unstructured regions
-- rather than arrays.

terra abs(a : double) : double
  if a < 0 then
    return -a
  else
    return a
  end
end

function index_to_ptr(ptr_type)
  return terra(index : uint)
    return [ptr_type] { __ptr = [legionlib.c.legion_ptr_t] { value = index } }
  end
end

task saxpy(n : uint, x: region(float), y: region(float), a: float)
where
  reads(x, y), writes(y)
do
  for i : uint = 0, n do
    var px = [index_to_ptr(ptr(float, x))](i)
    var py = [index_to_ptr(ptr(float, y))](i)

    @py += a*@px
  end
end

task test(n: uint)
  var x = region(float, n)
  var y = region(float, n)
  for i = 0, n do
    var px = new(ptr(float, x))
    var py = new(ptr(float, y))
  end

  for i : uint = 0, n do
    var px = [index_to_ptr(ptr(float, x))](i)
    var py = [index_to_ptr(ptr(float, y))](i)

    @px = 1.0
    @py = 0.0
  end

  saxpy(n, x, y, float(0.5))

  for i : uint = 0, n do
    var py = [index_to_ptr(ptr(float, y))](i)

    assert(abs(@py - 0.5) < 0.00001)
  end
end

task main()
  test([uint](10))
  test([uint](20))
end
legionlib.start(main)
