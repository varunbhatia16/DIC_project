-- Copyright 2015 Stanford University
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

import "legion"

local c = legionlib.c

function raw(t)
  return terra(x : t) return x.__ptr end
end

task assert_disjoint(r : region(int), s : region(int))
where reads(r, s), r * s do
end

task main()
  var r = region(int, 5)
  var x0 = new(ptr(int, r))
  var x1 = new(ptr(int, r))
  var x2 = new(ptr(int, r))
  var x3 = new(ptr(int, r))

  var colors0 = c.legion_coloring_create()
  c.legion_coloring_add_point(colors0, 0, [raw(ptr(int, r))](x0))
  c.legion_coloring_add_point(colors0, 0, [raw(ptr(int, r))](x1))
  c.legion_coloring_add_point(colors0, 1, [raw(ptr(int, r))](x2))
  c.legion_coloring_add_point(colors0, 1, [raw(ptr(int, r))](x3))
  var part0 = partition(disjoint, r, colors0)
  c.legion_coloring_destroy(colors0)

  var colors1 = c.legion_coloring_create()
  c.legion_coloring_add_point(colors1, 0, [raw(ptr(int, r))](x0))
  c.legion_coloring_add_point(colors1, 1, [raw(ptr(int, r))](x1))
  c.legion_coloring_add_point(colors1, 0, [raw(ptr(int, r))](x2))
  c.legion_coloring_add_point(colors1, 1, [raw(ptr(int, r))](x3))
  var part1 = partition(disjoint, r, colors1)
  c.legion_coloring_destroy(colors1)

  var prod = cross_product(part0, part1)
  var r0 = prod[0]
  var r1 = prod[1]
  assert_disjoint(r0, r1)
  var r00 = prod[0][0]
  var r01 = prod[0][1]
  var r10 = prod[1][0]
  var r11 = prod[1][1]
  assert_disjoint(r00, r01)
  assert_disjoint(r00, r10)
  assert_disjoint(r00, r11)
  assert_disjoint(r01, r10)
  assert_disjoint(r01, r11)
  assert_disjoint(r10, r11)
end
legionlib.start(main)
