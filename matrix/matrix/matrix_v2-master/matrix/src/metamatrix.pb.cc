// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamatrix.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "metamatrix.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MatrixMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatrixMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_metamatrix_2eproto() {
  protobuf_AddDesc_metamatrix_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "metamatrix.proto");
  GOOGLE_CHECK(file != NULL);
  MatrixMsg_descriptor_ = file->message_type(0);
  static const int MatrixMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, extrainfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, tasks_),
  };
  MatrixMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatrixMsg_descriptor_,
      MatrixMsg::default_instance_,
      MatrixMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(MatrixMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixMsg, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_metamatrix_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatrixMsg_descriptor_, &MatrixMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_metamatrix_2eproto() {
  delete MatrixMsg::default_instance_;
  delete MatrixMsg_reflection_;
}

void protobuf_AddDesc_metamatrix_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020metamatrix.proto\"M\n\tMatrixMsg\022\017\n\007msgTy"
    "pe\030\001 \002(\t\022\021\n\textraInfo\030\002 \001(\t\022\r\n\005count\030\003 \001"
    "(\003\022\r\n\005tasks\030\004 \003(\t", 97);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamatrix.proto", &protobuf_RegisterTypes);
  MatrixMsg::default_instance_ = new MatrixMsg();
  MatrixMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_metamatrix_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_metamatrix_2eproto {
  StaticDescriptorInitializer_metamatrix_2eproto() {
    protobuf_AddDesc_metamatrix_2eproto();
  }
} static_descriptor_initializer_metamatrix_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MatrixMsg::kMsgTypeFieldNumber;
const int MatrixMsg::kExtraInfoFieldNumber;
const int MatrixMsg::kCountFieldNumber;
const int MatrixMsg::kTasksFieldNumber;
#endif  // !_MSC_VER

MatrixMsg::MatrixMsg()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MatrixMsg)
}

void MatrixMsg::InitAsDefaultInstance() {
}

MatrixMsg::MatrixMsg(const MatrixMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MatrixMsg)
}

void MatrixMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extrainfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatrixMsg::~MatrixMsg() {
  // @@protoc_insertion_point(destructor:MatrixMsg)
  SharedDtor();
}

void MatrixMsg::SharedDtor() {
  msgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extrainfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MatrixMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatrixMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatrixMsg_descriptor_;
}

const MatrixMsg& MatrixMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_metamatrix_2eproto();
  return *default_instance_;
}

MatrixMsg* MatrixMsg::default_instance_ = NULL;

MatrixMsg* MatrixMsg::New(::google::protobuf::Arena* arena) const {
  MatrixMsg* n = new MatrixMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatrixMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_msgtype()) {
      msgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_extrainfo()) {
      extrainfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    count_ = GOOGLE_LONGLONG(0);
  }
  tasks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatrixMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MatrixMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msgType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgtype().data(), this->msgtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MatrixMsg.msgType");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_extraInfo;
        break;
      }

      // optional string extraInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_extraInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extrainfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extrainfo().data(), this->extrainfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MatrixMsg.extraInfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional int64 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tasks;
        break;
      }

      // repeated string tasks = 4;
      case 4: {
        if (tag == 34) {
         parse_tasks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tasks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tasks(this->tasks_size() - 1).data(),
            this->tasks(this->tasks_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MatrixMsg.tasks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tasks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MatrixMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MatrixMsg)
  return false;
#undef DO_
}

void MatrixMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MatrixMsg)
  // required string msgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgtype().data(), this->msgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MatrixMsg.msgType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msgtype(), output);
  }

  // optional string extraInfo = 2;
  if (has_extrainfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extrainfo().data(), this->extrainfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MatrixMsg.extraInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extrainfo(), output);
  }

  // optional int64 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->count(), output);
  }

  // repeated string tasks = 4;
  for (int i = 0; i < this->tasks_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->tasks(i).data(), this->tasks(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "MatrixMsg.tasks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tasks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MatrixMsg)
}

::google::protobuf::uint8* MatrixMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MatrixMsg)
  // required string msgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgtype().data(), this->msgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MatrixMsg.msgType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msgtype(), target);
  }

  // optional string extraInfo = 2;
  if (has_extrainfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extrainfo().data(), this->extrainfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MatrixMsg.extraInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extrainfo(), target);
  }

  // optional int64 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->count(), target);
  }

  // repeated string tasks = 4;
  for (int i = 0; i < this->tasks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tasks(i).data(), this->tasks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MatrixMsg.tasks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->tasks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MatrixMsg)
  return target;
}

int MatrixMsg::ByteSize() const {
  int total_size = 0;

  // required string msgType = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgtype());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string extraInfo = 2;
    if (has_extrainfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extrainfo());
    }

    // optional int64 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }

  }
  // repeated string tasks = 4;
  total_size += 1 * this->tasks_size();
  for (int i = 0; i < this->tasks_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tasks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatrixMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MatrixMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatrixMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatrixMsg::MergeFrom(const MatrixMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tasks_.MergeFrom(from.tasks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_has_msgtype();
      msgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtype_);
    }
    if (from.has_extrainfo()) {
      set_has_extrainfo();
      extrainfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extrainfo_);
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MatrixMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatrixMsg::CopyFrom(const MatrixMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MatrixMsg::Swap(MatrixMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatrixMsg::InternalSwap(MatrixMsg* other) {
  msgtype_.Swap(&other->msgtype_);
  extrainfo_.Swap(&other->extrainfo_);
  std::swap(count_, other->count_);
  tasks_.UnsafeArenaSwap(&other->tasks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatrixMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatrixMsg_descriptor_;
  metadata.reflection = MatrixMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatrixMsg

// required string msgType = 1;
 bool MatrixMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MatrixMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
 void MatrixMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MatrixMsg::clear_msgtype() {
  msgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgtype();
}
 const ::std::string& MatrixMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:MatrixMsg.msgType)
  return msgtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixMsg::set_msgtype(const ::std::string& value) {
  set_has_msgtype();
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MatrixMsg.msgType)
}
 void MatrixMsg::set_msgtype(const char* value) {
  set_has_msgtype();
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MatrixMsg.msgType)
}
 void MatrixMsg::set_msgtype(const char* value, size_t size) {
  set_has_msgtype();
  msgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MatrixMsg.msgType)
}
 ::std::string* MatrixMsg::mutable_msgtype() {
  set_has_msgtype();
  // @@protoc_insertion_point(field_mutable:MatrixMsg.msgType)
  return msgtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MatrixMsg::release_msgtype() {
  clear_has_msgtype();
  return msgtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixMsg::set_allocated_msgtype(::std::string* msgtype) {
  if (msgtype != NULL) {
    set_has_msgtype();
  } else {
    clear_has_msgtype();
  }
  msgtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgtype);
  // @@protoc_insertion_point(field_set_allocated:MatrixMsg.msgType)
}

// optional string extraInfo = 2;
 bool MatrixMsg::has_extrainfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MatrixMsg::set_has_extrainfo() {
  _has_bits_[0] |= 0x00000002u;
}
 void MatrixMsg::clear_has_extrainfo() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MatrixMsg::clear_extrainfo() {
  extrainfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extrainfo();
}
 const ::std::string& MatrixMsg::extrainfo() const {
  // @@protoc_insertion_point(field_get:MatrixMsg.extraInfo)
  return extrainfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixMsg::set_extrainfo(const ::std::string& value) {
  set_has_extrainfo();
  extrainfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MatrixMsg.extraInfo)
}
 void MatrixMsg::set_extrainfo(const char* value) {
  set_has_extrainfo();
  extrainfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MatrixMsg.extraInfo)
}
 void MatrixMsg::set_extrainfo(const char* value, size_t size) {
  set_has_extrainfo();
  extrainfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MatrixMsg.extraInfo)
}
 ::std::string* MatrixMsg::mutable_extrainfo() {
  set_has_extrainfo();
  // @@protoc_insertion_point(field_mutable:MatrixMsg.extraInfo)
  return extrainfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MatrixMsg::release_extrainfo() {
  clear_has_extrainfo();
  return extrainfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixMsg::set_allocated_extrainfo(::std::string* extrainfo) {
  if (extrainfo != NULL) {
    set_has_extrainfo();
  } else {
    clear_has_extrainfo();
  }
  extrainfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extrainfo);
  // @@protoc_insertion_point(field_set_allocated:MatrixMsg.extraInfo)
}

// optional int64 count = 3;
 bool MatrixMsg::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MatrixMsg::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
 void MatrixMsg::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MatrixMsg::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
 ::google::protobuf::int64 MatrixMsg::count() const {
  // @@protoc_insertion_point(field_get:MatrixMsg.count)
  return count_;
}
 void MatrixMsg::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MatrixMsg.count)
}

// repeated string tasks = 4;
 int MatrixMsg::tasks_size() const {
  return tasks_.size();
}
 void MatrixMsg::clear_tasks() {
  tasks_.Clear();
}
 const ::std::string& MatrixMsg::tasks(int index) const {
  // @@protoc_insertion_point(field_get:MatrixMsg.tasks)
  return tasks_.Get(index);
}
 ::std::string* MatrixMsg::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:MatrixMsg.tasks)
  return tasks_.Mutable(index);
}
 void MatrixMsg::set_tasks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MatrixMsg.tasks)
  tasks_.Mutable(index)->assign(value);
}
 void MatrixMsg::set_tasks(int index, const char* value) {
  tasks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MatrixMsg.tasks)
}
 void MatrixMsg::set_tasks(int index, const char* value, size_t size) {
  tasks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MatrixMsg.tasks)
}
 ::std::string* MatrixMsg::add_tasks() {
  return tasks_.Add();
}
 void MatrixMsg::add_tasks(const ::std::string& value) {
  tasks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MatrixMsg.tasks)
}
 void MatrixMsg::add_tasks(const char* value) {
  tasks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MatrixMsg.tasks)
}
 void MatrixMsg::add_tasks(const char* value, size_t size) {
  tasks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MatrixMsg.tasks)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MatrixMsg::tasks() const {
  // @@protoc_insertion_point(field_list:MatrixMsg.tasks)
  return tasks_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MatrixMsg::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:MatrixMsg.tasks)
  return &tasks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
