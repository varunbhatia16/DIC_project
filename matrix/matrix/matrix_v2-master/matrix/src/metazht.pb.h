// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metazht.proto

#ifndef PROTOBUF_metazht_2eproto__INCLUDED
#define PROTOBUF_metazht_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_metazht_2eproto();
void protobuf_AssignDesc_metazht_2eproto();
void protobuf_ShutdownFile_metazht_2eproto();

class Value;

// ===================================================================

class Value : public ::google::protobuf::Message {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  void Swap(Value* other);

  // implements Message ----------------------------------------------

  inline Value* New() const { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int64 indegree = 2;
  bool has_indegree() const;
  void clear_indegree();
  static const int kIndegreeFieldNumber = 2;
  ::google::protobuf::int64 indegree() const;
  void set_indegree(::google::protobuf::int64 value);

  // repeated string parents = 3;
  int parents_size() const;
  void clear_parents();
  static const int kParentsFieldNumber = 3;
  const ::std::string& parents(int index) const;
  ::std::string* mutable_parents(int index);
  void set_parents(int index, const ::std::string& value);
  void set_parents(int index, const char* value);
  void set_parents(int index, const char* value, size_t size);
  ::std::string* add_parents();
  void add_parents(const ::std::string& value);
  void add_parents(const char* value);
  void add_parents(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& parents() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parents();

  // repeated string children = 4;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 4;
  const ::std::string& children(int index) const;
  ::std::string* mutable_children(int index);
  void set_children(int index, const ::std::string& value);
  void set_children(int index, const char* value);
  void set_children(int index, const char* value, size_t size);
  ::std::string* add_children();
  void add_children(const ::std::string& value);
  void add_children(const char* value);
  void add_children(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& children() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_children();

  // repeated string dataNameList = 5;
  int datanamelist_size() const;
  void clear_datanamelist();
  static const int kDataNameListFieldNumber = 5;
  const ::std::string& datanamelist(int index) const;
  ::std::string* mutable_datanamelist(int index);
  void set_datanamelist(int index, const ::std::string& value);
  void set_datanamelist(int index, const char* value);
  void set_datanamelist(int index, const char* value, size_t size);
  ::std::string* add_datanamelist();
  void add_datanamelist(const ::std::string& value);
  void add_datanamelist(const char* value);
  void add_datanamelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& datanamelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_datanamelist();

  // repeated int64 dataSize = 6;
  int datasize_size() const;
  void clear_datasize();
  static const int kDataSizeFieldNumber = 6;
  ::google::protobuf::int64 datasize(int index) const;
  void set_datasize(int index, ::google::protobuf::int64 value);
  void add_datasize(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      datasize() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_datasize();

  // optional int64 allDataSize = 7;
  bool has_alldatasize() const;
  void clear_alldatasize();
  static const int kAllDataSizeFieldNumber = 7;
  ::google::protobuf::int64 alldatasize() const;
  void set_alldatasize(::google::protobuf::int64 value);

  // optional int64 tasklength = 8;
  bool has_tasklength() const;
  void clear_tasklength();
  static const int kTasklengthFieldNumber = 8;
  ::google::protobuf::int64 tasklength() const;
  void set_tasklength(::google::protobuf::int64 value);

  // optional int64 numTaskFin = 9;
  bool has_numtaskfin() const;
  void clear_numtaskfin();
  static const int kNumTaskFinFieldNumber = 9;
  ::google::protobuf::int64 numtaskfin() const;
  void set_numtaskfin(::google::protobuf::int64 value);

  // optional int64 numWorkSteal = 10;
  bool has_numworksteal() const;
  void clear_numworksteal();
  static const int kNumWorkStealFieldNumber = 10;
  ::google::protobuf::int64 numworksteal() const;
  void set_numworksteal(::google::protobuf::int64 value);

  // optional int64 numWorkStealFail = 11;
  bool has_numworkstealfail() const;
  void clear_numworkstealfail();
  static const int kNumWorkStealFailFieldNumber = 11;
  ::google::protobuf::int64 numworkstealfail() const;
  void set_numworkstealfail(::google::protobuf::int64 value);

  // optional int32 numTaskWait = 12;
  bool has_numtaskwait() const;
  void clear_numtaskwait();
  static const int kNumTaskWaitFieldNumber = 12;
  ::google::protobuf::int32 numtaskwait() const;
  void set_numtaskwait(::google::protobuf::int32 value);

  // optional int32 numTaskReady = 13;
  bool has_numtaskready() const;
  void clear_numtaskready();
  static const int kNumTaskReadyFieldNumber = 13;
  ::google::protobuf::int32 numtaskready() const;
  void set_numtaskready(::google::protobuf::int32 value);

  // optional int32 numCoreAvilable = 14;
  bool has_numcoreavilable() const;
  void clear_numcoreavilable();
  static const int kNumCoreAvilableFieldNumber = 14;
  ::google::protobuf::int32 numcoreavilable() const;
  void set_numcoreavilable(::google::protobuf::int32 value);

  // optional int32 numAllCore = 15;
  bool has_numallcore() const;
  void clear_numallcore();
  static const int kNumAllCoreFieldNumber = 15;
  ::google::protobuf::int32 numallcore() const;
  void set_numallcore(::google::protobuf::int32 value);

  // optional int64 outputsize = 16;
  bool has_outputsize() const;
  void clear_outputsize();
  static const int kOutputsizeFieldNumber = 16;
  ::google::protobuf::int64 outputsize() const;
  void set_outputsize(::google::protobuf::int64 value);

  // optional int64 submitTime = 17;
  bool has_submittime() const;
  void clear_submittime();
  static const int kSubmitTimeFieldNumber = 17;
  ::google::protobuf::int64 submittime() const;
  void set_submittime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Value)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_indegree();
  inline void clear_has_indegree();
  inline void set_has_alldatasize();
  inline void clear_has_alldatasize();
  inline void set_has_tasklength();
  inline void clear_has_tasklength();
  inline void set_has_numtaskfin();
  inline void clear_has_numtaskfin();
  inline void set_has_numworksteal();
  inline void clear_has_numworksteal();
  inline void set_has_numworkstealfail();
  inline void clear_has_numworkstealfail();
  inline void set_has_numtaskwait();
  inline void clear_has_numtaskwait();
  inline void set_has_numtaskready();
  inline void clear_has_numtaskready();
  inline void set_has_numcoreavilable();
  inline void clear_has_numcoreavilable();
  inline void set_has_numallcore();
  inline void clear_has_numallcore();
  inline void set_has_outputsize();
  inline void clear_has_outputsize();
  inline void set_has_submittime();
  inline void clear_has_submittime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int64 indegree_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parents_;
  ::google::protobuf::RepeatedPtrField< ::std::string> children_;
  ::google::protobuf::RepeatedPtrField< ::std::string> datanamelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > datasize_;
  ::google::protobuf::int64 alldatasize_;
  ::google::protobuf::int64 tasklength_;
  ::google::protobuf::int64 numtaskfin_;
  ::google::protobuf::int64 numworksteal_;
  ::google::protobuf::int64 numworkstealfail_;
  ::google::protobuf::int32 numtaskwait_;
  ::google::protobuf::int32 numtaskready_;
  ::google::protobuf::int32 numcoreavilable_;
  ::google::protobuf::int32 numallcore_;
  ::google::protobuf::int64 outputsize_;
  ::google::protobuf::int64 submittime_;
  friend void  protobuf_AddDesc_metazht_2eproto();
  friend void protobuf_AssignDesc_metazht_2eproto();
  friend void protobuf_ShutdownFile_metazht_2eproto();

  void InitAsDefaultInstance();
  static Value* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Value

// required string id = 1;
inline bool Value::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Value::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Value::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Value::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Value::id() const {
  // @@protoc_insertion_point(field_get:Value.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Value.id)
}
inline void Value::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Value.id)
}
inline void Value::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Value.id)
}
inline ::std::string* Value::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Value.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Value.id)
}

// optional int64 indegree = 2;
inline bool Value::has_indegree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Value::set_has_indegree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Value::clear_has_indegree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Value::clear_indegree() {
  indegree_ = GOOGLE_LONGLONG(0);
  clear_has_indegree();
}
inline ::google::protobuf::int64 Value::indegree() const {
  // @@protoc_insertion_point(field_get:Value.indegree)
  return indegree_;
}
inline void Value::set_indegree(::google::protobuf::int64 value) {
  set_has_indegree();
  indegree_ = value;
  // @@protoc_insertion_point(field_set:Value.indegree)
}

// repeated string parents = 3;
inline int Value::parents_size() const {
  return parents_.size();
}
inline void Value::clear_parents() {
  parents_.Clear();
}
inline const ::std::string& Value::parents(int index) const {
  // @@protoc_insertion_point(field_get:Value.parents)
  return parents_.Get(index);
}
inline ::std::string* Value::mutable_parents(int index) {
  // @@protoc_insertion_point(field_mutable:Value.parents)
  return parents_.Mutable(index);
}
inline void Value::set_parents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Value.parents)
  parents_.Mutable(index)->assign(value);
}
inline void Value::set_parents(int index, const char* value) {
  parents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Value.parents)
}
inline void Value::set_parents(int index, const char* value, size_t size) {
  parents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Value.parents)
}
inline ::std::string* Value::add_parents() {
  return parents_.Add();
}
inline void Value::add_parents(const ::std::string& value) {
  parents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Value.parents)
}
inline void Value::add_parents(const char* value) {
  parents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Value.parents)
}
inline void Value::add_parents(const char* value, size_t size) {
  parents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Value.parents)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Value::parents() const {
  // @@protoc_insertion_point(field_list:Value.parents)
  return parents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Value::mutable_parents() {
  // @@protoc_insertion_point(field_mutable_list:Value.parents)
  return &parents_;
}

// repeated string children = 4;
inline int Value::children_size() const {
  return children_.size();
}
inline void Value::clear_children() {
  children_.Clear();
}
inline const ::std::string& Value::children(int index) const {
  // @@protoc_insertion_point(field_get:Value.children)
  return children_.Get(index);
}
inline ::std::string* Value::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:Value.children)
  return children_.Mutable(index);
}
inline void Value::set_children(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Value.children)
  children_.Mutable(index)->assign(value);
}
inline void Value::set_children(int index, const char* value) {
  children_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Value.children)
}
inline void Value::set_children(int index, const char* value, size_t size) {
  children_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Value.children)
}
inline ::std::string* Value::add_children() {
  return children_.Add();
}
inline void Value::add_children(const ::std::string& value) {
  children_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Value.children)
}
inline void Value::add_children(const char* value) {
  children_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Value.children)
}
inline void Value::add_children(const char* value, size_t size) {
  children_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Value.children)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Value::children() const {
  // @@protoc_insertion_point(field_list:Value.children)
  return children_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Value::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:Value.children)
  return &children_;
}

// repeated string dataNameList = 5;
inline int Value::datanamelist_size() const {
  return datanamelist_.size();
}
inline void Value::clear_datanamelist() {
  datanamelist_.Clear();
}
inline const ::std::string& Value::datanamelist(int index) const {
  // @@protoc_insertion_point(field_get:Value.dataNameList)
  return datanamelist_.Get(index);
}
inline ::std::string* Value::mutable_datanamelist(int index) {
  // @@protoc_insertion_point(field_mutable:Value.dataNameList)
  return datanamelist_.Mutable(index);
}
inline void Value::set_datanamelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Value.dataNameList)
  datanamelist_.Mutable(index)->assign(value);
}
inline void Value::set_datanamelist(int index, const char* value) {
  datanamelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Value.dataNameList)
}
inline void Value::set_datanamelist(int index, const char* value, size_t size) {
  datanamelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Value.dataNameList)
}
inline ::std::string* Value::add_datanamelist() {
  return datanamelist_.Add();
}
inline void Value::add_datanamelist(const ::std::string& value) {
  datanamelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Value.dataNameList)
}
inline void Value::add_datanamelist(const char* value) {
  datanamelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Value.dataNameList)
}
inline void Value::add_datanamelist(const char* value, size_t size) {
  datanamelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Value.dataNameList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Value::datanamelist() const {
  // @@protoc_insertion_point(field_list:Value.dataNameList)
  return datanamelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Value::mutable_datanamelist() {
  // @@protoc_insertion_point(field_mutable_list:Value.dataNameList)
  return &datanamelist_;
}

// repeated int64 dataSize = 6;
inline int Value::datasize_size() const {
  return datasize_.size();
}
inline void Value::clear_datasize() {
  datasize_.Clear();
}
inline ::google::protobuf::int64 Value::datasize(int index) const {
  // @@protoc_insertion_point(field_get:Value.dataSize)
  return datasize_.Get(index);
}
inline void Value::set_datasize(int index, ::google::protobuf::int64 value) {
  datasize_.Set(index, value);
  // @@protoc_insertion_point(field_set:Value.dataSize)
}
inline void Value::add_datasize(::google::protobuf::int64 value) {
  datasize_.Add(value);
  // @@protoc_insertion_point(field_add:Value.dataSize)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Value::datasize() const {
  // @@protoc_insertion_point(field_list:Value.dataSize)
  return datasize_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Value::mutable_datasize() {
  // @@protoc_insertion_point(field_mutable_list:Value.dataSize)
  return &datasize_;
}

// optional int64 allDataSize = 7;
inline bool Value::has_alldatasize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Value::set_has_alldatasize() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Value::clear_has_alldatasize() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Value::clear_alldatasize() {
  alldatasize_ = GOOGLE_LONGLONG(0);
  clear_has_alldatasize();
}
inline ::google::protobuf::int64 Value::alldatasize() const {
  // @@protoc_insertion_point(field_get:Value.allDataSize)
  return alldatasize_;
}
inline void Value::set_alldatasize(::google::protobuf::int64 value) {
  set_has_alldatasize();
  alldatasize_ = value;
  // @@protoc_insertion_point(field_set:Value.allDataSize)
}

// optional int64 tasklength = 8;
inline bool Value::has_tasklength() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Value::set_has_tasklength() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Value::clear_has_tasklength() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Value::clear_tasklength() {
  tasklength_ = GOOGLE_LONGLONG(0);
  clear_has_tasklength();
}
inline ::google::protobuf::int64 Value::tasklength() const {
  // @@protoc_insertion_point(field_get:Value.tasklength)
  return tasklength_;
}
inline void Value::set_tasklength(::google::protobuf::int64 value) {
  set_has_tasklength();
  tasklength_ = value;
  // @@protoc_insertion_point(field_set:Value.tasklength)
}

// optional int64 numTaskFin = 9;
inline bool Value::has_numtaskfin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Value::set_has_numtaskfin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Value::clear_has_numtaskfin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Value::clear_numtaskfin() {
  numtaskfin_ = GOOGLE_LONGLONG(0);
  clear_has_numtaskfin();
}
inline ::google::protobuf::int64 Value::numtaskfin() const {
  // @@protoc_insertion_point(field_get:Value.numTaskFin)
  return numtaskfin_;
}
inline void Value::set_numtaskfin(::google::protobuf::int64 value) {
  set_has_numtaskfin();
  numtaskfin_ = value;
  // @@protoc_insertion_point(field_set:Value.numTaskFin)
}

// optional int64 numWorkSteal = 10;
inline bool Value::has_numworksteal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Value::set_has_numworksteal() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Value::clear_has_numworksteal() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Value::clear_numworksteal() {
  numworksteal_ = GOOGLE_LONGLONG(0);
  clear_has_numworksteal();
}
inline ::google::protobuf::int64 Value::numworksteal() const {
  // @@protoc_insertion_point(field_get:Value.numWorkSteal)
  return numworksteal_;
}
inline void Value::set_numworksteal(::google::protobuf::int64 value) {
  set_has_numworksteal();
  numworksteal_ = value;
  // @@protoc_insertion_point(field_set:Value.numWorkSteal)
}

// optional int64 numWorkStealFail = 11;
inline bool Value::has_numworkstealfail() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Value::set_has_numworkstealfail() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Value::clear_has_numworkstealfail() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Value::clear_numworkstealfail() {
  numworkstealfail_ = GOOGLE_LONGLONG(0);
  clear_has_numworkstealfail();
}
inline ::google::protobuf::int64 Value::numworkstealfail() const {
  // @@protoc_insertion_point(field_get:Value.numWorkStealFail)
  return numworkstealfail_;
}
inline void Value::set_numworkstealfail(::google::protobuf::int64 value) {
  set_has_numworkstealfail();
  numworkstealfail_ = value;
  // @@protoc_insertion_point(field_set:Value.numWorkStealFail)
}

// optional int32 numTaskWait = 12;
inline bool Value::has_numtaskwait() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Value::set_has_numtaskwait() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Value::clear_has_numtaskwait() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Value::clear_numtaskwait() {
  numtaskwait_ = 0;
  clear_has_numtaskwait();
}
inline ::google::protobuf::int32 Value::numtaskwait() const {
  // @@protoc_insertion_point(field_get:Value.numTaskWait)
  return numtaskwait_;
}
inline void Value::set_numtaskwait(::google::protobuf::int32 value) {
  set_has_numtaskwait();
  numtaskwait_ = value;
  // @@protoc_insertion_point(field_set:Value.numTaskWait)
}

// optional int32 numTaskReady = 13;
inline bool Value::has_numtaskready() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Value::set_has_numtaskready() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Value::clear_has_numtaskready() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Value::clear_numtaskready() {
  numtaskready_ = 0;
  clear_has_numtaskready();
}
inline ::google::protobuf::int32 Value::numtaskready() const {
  // @@protoc_insertion_point(field_get:Value.numTaskReady)
  return numtaskready_;
}
inline void Value::set_numtaskready(::google::protobuf::int32 value) {
  set_has_numtaskready();
  numtaskready_ = value;
  // @@protoc_insertion_point(field_set:Value.numTaskReady)
}

// optional int32 numCoreAvilable = 14;
inline bool Value::has_numcoreavilable() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Value::set_has_numcoreavilable() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Value::clear_has_numcoreavilable() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Value::clear_numcoreavilable() {
  numcoreavilable_ = 0;
  clear_has_numcoreavilable();
}
inline ::google::protobuf::int32 Value::numcoreavilable() const {
  // @@protoc_insertion_point(field_get:Value.numCoreAvilable)
  return numcoreavilable_;
}
inline void Value::set_numcoreavilable(::google::protobuf::int32 value) {
  set_has_numcoreavilable();
  numcoreavilable_ = value;
  // @@protoc_insertion_point(field_set:Value.numCoreAvilable)
}

// optional int32 numAllCore = 15;
inline bool Value::has_numallcore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Value::set_has_numallcore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Value::clear_has_numallcore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Value::clear_numallcore() {
  numallcore_ = 0;
  clear_has_numallcore();
}
inline ::google::protobuf::int32 Value::numallcore() const {
  // @@protoc_insertion_point(field_get:Value.numAllCore)
  return numallcore_;
}
inline void Value::set_numallcore(::google::protobuf::int32 value) {
  set_has_numallcore();
  numallcore_ = value;
  // @@protoc_insertion_point(field_set:Value.numAllCore)
}

// optional int64 outputsize = 16;
inline bool Value::has_outputsize() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Value::set_has_outputsize() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Value::clear_has_outputsize() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Value::clear_outputsize() {
  outputsize_ = GOOGLE_LONGLONG(0);
  clear_has_outputsize();
}
inline ::google::protobuf::int64 Value::outputsize() const {
  // @@protoc_insertion_point(field_get:Value.outputsize)
  return outputsize_;
}
inline void Value::set_outputsize(::google::protobuf::int64 value) {
  set_has_outputsize();
  outputsize_ = value;
  // @@protoc_insertion_point(field_set:Value.outputsize)
}

// optional int64 submitTime = 17;
inline bool Value::has_submittime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Value::set_has_submittime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Value::clear_has_submittime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Value::clear_submittime() {
  submittime_ = GOOGLE_LONGLONG(0);
  clear_has_submittime();
}
inline ::google::protobuf::int64 Value::submittime() const {
  // @@protoc_insertion_point(field_get:Value.submitTime)
  return submittime_;
}
inline void Value::set_submittime(::google::protobuf::int64 value) {
  set_has_submittime();
  submittime_ = value;
  // @@protoc_insertion_point(field_set:Value.submitTime)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_metazht_2eproto__INCLUDED
